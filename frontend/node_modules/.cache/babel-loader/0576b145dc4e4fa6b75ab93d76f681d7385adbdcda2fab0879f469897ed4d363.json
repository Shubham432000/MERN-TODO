{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHREE\\\\Desktop\\\\node-mongo\\\\frontend\\\\src\\\\component\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [user, setUser] = useState({});\n  const callHomePage = async () => {\n    try {\n      const res = await fetch(\"/home\", {\n        method: \"GET\",\n        headers: {\n          // Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": token\n        },\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      console.log(data);\n      setUser(data);\n      if (!res.status === 200) {\n        const error = new Error(res.error);\n        throw error;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    callHomePage();\n  }, []);\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"welcome home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"l0nCqodPWuiGgcnCHidP90F0Gls=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Home","user","setUser","callHomePage","res","fetch","method","headers","token","credentials","data","json","console","log","status","error","Error","err","name"],"sources":["C:/Users/SHREE/Desktop/node-mongo/frontend/src/component/Home.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst Home = () => {\r\n  const [user, setUser] = useState({});\r\n\r\n  const callHomePage = async () => {\r\n    try {\r\n      const res = await fetch(\"/home\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          // Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": token\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUser(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callHomePage();\r\n  }, []);\r\n  console.log(user);\r\n  return (\r\n    <>\r\n      <h1>welcome home</h1>\r\n      <h1>{user.name}</h1>\r\n     \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMI,YAAY,GAAG,YAAY;IAC/B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAO,EAAE;QAC/BC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP;UACA,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAEC;QACnB,CAAC;QACDC,WAAW,EAAE;MACf,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,EAAE;MAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBR,OAAO,CAACQ,IAAI,CAAC;MAEb,IAAI,CAACN,GAAG,CAACU,MAAM,KAAK,GAAG,EAAE;QACvB,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACZ,GAAG,CAACW,KAAK,CAAC;QAClC,MAAMA,KAAK;MACb;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;IAClB;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdK,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EACNS,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;EACjB,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eACrB;MAAA,UAAKA,IAAI,CAACiB;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA,gBAEnB;AAEP,CAAC;AAAC,GAtCIlB,IAAI;AAAA,KAAJA,IAAI;AAwCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}