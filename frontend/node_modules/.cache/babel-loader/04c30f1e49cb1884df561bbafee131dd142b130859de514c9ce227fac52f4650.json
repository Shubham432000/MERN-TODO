{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHREE\\\\Desktop\\\\node-mongo\\\\frontend\\\\src\\\\component\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [getTodo, setGetTodo] = useState([]);\n  // const[time,setTime]= useState(id)\n\n  const fetchUserData = async () => {\n    const resp = await axios.get(\"/gettodo\");\n    console.log(\"data\", resp.data.getTodo);\n\n    // if No users are there please dont set the values\n    if (resp.status == 402) {\n      console.log(\"err\");\n    } else {\n      setGetTodo(resp.data.getTodo);\n      alert(\"succefully fetch data\");\n    }\n\n    //setGetTodo(resp.data.getTodo);\n  };\n\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n  const deletTodo = async item1 => {\n    const resp = await axios.delete(`/delettodo/${item1}`);\n    // toast.success(\"Delete Success !\", {\n    //   position: toast.POSITION.TOP_CENTER,\n    // });\n    console.log(resp);\n    if (resp.status == 402) {\n      console.log(\"error\");\n    } else {\n      fetchUserData();\n      toast.success(\"Delete Success !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-100 w-full flex items-center justify-center bg-teal-lightest font-sans\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded shadow p-6 m-4 w-full lg:w-full lg:max-w-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getTodo.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mb-4 items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"w-full text-grey-darkest text-xl\",\n              children: item.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: `/edittodo/${item._id}`,\n              className: \"flex-no-shrink p-2 ml-4 mr-2 border-2 rounded   border-green bg-green-500 text-white hover:bg-white hover:text-green-500\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deletTodo(item._id),\n              className: \"flex-no-shrink p-2 ml-2 border-2 rounded  border-red  bg-red-600 text-white hover:bg-white hover:text-red-600\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TodoList, \"3E0t4WGYt4kasIEUvQghZPYy7yM=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","toast","NavLink","TodoList","getTodo","setGetTodo","fetchUserData","resp","get","console","log","data","status","alert","deletTodo","item1","delete","success","position","POSITION","TOP_CENTER","map","item","index","time","_id"],"sources":["C:/Users/SHREE/Desktop/node-mongo/frontend/src/component/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst TodoList = () => {\r\n  const [getTodo, setGetTodo] = useState([]);\r\n  // const[time,setTime]= useState(id)\r\n\r\n  const fetchUserData = async () => {\r\n    const resp = await axios.get(\"/gettodo\");\r\n    console.log(\"data\", resp.data.getTodo);\r\n\r\n    // if No users are there please dont set the values\r\n    if(resp.status == 402){\r\n      console.log(\"err\")\r\n    }else{\r\n      setGetTodo(resp.data.getTodo);\r\n      alert(\"succefully fetch data\")\r\n    }\r\n\r\n    //setGetTodo(resp.data.getTodo);\r\n  };\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  \r\n  const deletTodo = async (item1) => {\r\n    const resp = await axios.delete(`/delettodo/${item1}`);\r\n    // toast.success(\"Delete Success !\", {\r\n    //   position: toast.POSITION.TOP_CENTER,\r\n    // });\r\n    console.log(resp);\r\n    if(resp.status == 402){\r\n      console.log(\"error\")\r\n    }else{\r\n      fetchUserData()\r\n      toast.success(\"Delete Success !\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"h-100 w-full flex items-center justify-center bg-teal-lightest font-sans\">\r\n        <div className=\"bg-white rounded shadow p-6 m-4 w-full lg:w-full lg:max-w-lg\">\r\n          <div>\r\n            {getTodo.map((item, index) => (\r\n              <div key={index} className=\"flex mb-4 items-center\">\r\n                <p className=\"w-full text-grey-darkest text-xl\">{item.data}</p>\r\n                <p>{item.time}</p>\r\n                {/* <button\r\n                  onClick={() => editTodo(item)}\r\n                  className=\"flex-no-shrink p-2 ml-4 mr-2 border-2 rounded   border-green bg-green-500 text-white hover:bg-white hover:text-green-500\"\r\n                >\r\n                  Edit\r\n                </button> */}\r\n                <NavLink to={`/edittodo/${item._id}`} className=\"flex-no-shrink p-2 ml-4 mr-2 border-2 rounded   border-green bg-green-500 text-white hover:bg-white hover:text-green-500\">\r\n                  Edit\r\n                </NavLink>\r\n                <button\r\n                  onClick={() => deletTodo(item._id)}\r\n                  className=\"flex-no-shrink p-2 ml-2 border-2 rounded  border-red  bg-red-600 text-white hover:bg-white hover:text-red-600\"\r\n                >\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"ml-[250px] mt-[100px]\">\r\n        <table className=\"table-fixed border-collapse border border-slate-400\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"border border-slate-300 p-4\">TODO</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {getTodo.map((item,index) => (\r\n              <tr key={index}>\r\n                <td className=\"border border-slate-300 p-4\">{item.data}</td>\r\n\r\n                <td className=\"border border-slate-300 p-4\">\r\n                <HiPencilAlt \r\n                onClick={() => editTodo(item)}\r\n                 />\r\n              </td>\r\n              <td className=\"border border-slate-300 p-4\">\r\n                <FaTrashAlt\r\n                 onClick={() => deletTodo(item._id)}\r\n                  />\r\n              </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAC9C,SAASC,OAAO,QAAQ,kBAAkB;AAAC;AAAA;AAE3C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C;;EAEA,MAAMQ,aAAa,GAAG,YAAY;IAChC,MAAMC,IAAI,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,UAAU,CAAC;IACxCC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,IAAI,CAACI,IAAI,CAACP,OAAO,CAAC;;IAEtC;IACA,IAAGG,IAAI,CAACK,MAAM,IAAI,GAAG,EAAC;MACpBH,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IACpB,CAAC,MAAI;MACHL,UAAU,CAACE,IAAI,CAACI,IAAI,CAACP,OAAO,CAAC;MAC7BS,KAAK,CAAC,uBAAuB,CAAC;IAChC;;IAEA;EACF,CAAC;;EACDd,SAAS,CAAC,MAAM;IACdO,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMQ,SAAS,GAAG,MAAOC,KAAK,IAAK;IACjC,MAAMR,IAAI,GAAG,MAAMP,KAAK,CAACgB,MAAM,CAAE,cAAaD,KAAM,EAAC,CAAC;IACtD;IACA;IACA;IACAN,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,IAAGA,IAAI,CAACK,MAAM,IAAI,GAAG,EAAC;MACpBH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACtB,CAAC,MAAI;MACHJ,aAAa,EAAE;MACfL,KAAK,CAACgB,OAAO,CAAC,kBAAkB,EAAE;QAChCC,QAAQ,EAAEjB,KAAK,CAACkB,QAAQ,CAACC;MAC3B,CAAC,CAAC;IACJ;EACF,CAAC;EAID,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,0EAA0E;MAAA,uBACvF;QAAK,SAAS,EAAC,8DAA8D;QAAA,uBAC3E;UAAA,UACGhB,OAAO,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvB;YAAiB,SAAS,EAAC,wBAAwB;YAAA,wBACjD;cAAG,SAAS,EAAC,kCAAkC;cAAA,UAAED,IAAI,CAACX;YAAI;cAAA;cAAA;cAAA;YAAA,QAAK,eAC/D;cAAA,UAAIW,IAAI,CAACE;YAAI;cAAA;cAAA;cAAA;YAAA,QAAK,eAOlB,QAAC,OAAO;cAAC,EAAE,EAAG,aAAYF,IAAI,CAACG,GAAI,EAAE;cAAC,SAAS,EAAC,0HAA0H;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAEhK,eACV;cACE,OAAO,EAAE,MAAMX,SAAS,CAACQ,IAAI,CAACG,GAAG,CAAE;cACnC,SAAS,EAAC,+GAA+G;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAGlH;UAAA,GAjBDF,KAAK;YAAA;YAAA;YAAA;UAAA,QAmBhB;QAAC;UAAA;UAAA;UAAA;QAAA;MACE;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA;EACF,iBA8BL;AAEP,CAAC;AAAC,GArGIpB,QAAQ;AAAA,KAARA,QAAQ;AAuGd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}